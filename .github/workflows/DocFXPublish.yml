# Simple workflow for generating DocFx Content and publish to GitHub Pages
name: Generate and Publish DocFx Content

on:
  # Runs on pushes targeting the default branch and impacting either the src_stripped, docfx_project, public, or DLL_stripped folders
  push:
    branches: ["main"]
    paths: ["src_stripped/**", "docfx_project/**", "public/**", "DLL_stripped/**"]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
  
# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@master
      - name: Move XML file
        run: |
          move DLL_stripped\Assembly-CSharp.xml DLL_stripped\Assembly-CSharp.xml.bak
          dir DLL_stripped
        shell: cmd
      - name: Generate XML Documentation Directly
        run: GenDoc\GenDoc.exe src_stripped\Assembly-CSharp-Stripped.sln DLL_stripped
        shell: cmd
      - name: Check XML file
        run: dir DLL_stripped
        shell: cmd
      - name: Upload Assembly-CSharp.xml Artifact
        uses: actions/upload-artifact@v3
        with:
          name: Assembly-CSharp.xml
          path: DLL_stripped/Assembly-CSharp.xml
  publish-docs:
    needs: build
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps:
      - name: Chekout
        uses: actions/checkout@v3
      - name: Move old Assembly-CSharp.xml
        run: |
          mv DLL_stripped/Assembly-CSharp.xml DLL_stripped/Assembly-CSharp.xml.bak
          ls -l DLL_stripped
          oldSize=$(find "DLL_stripped/Assembly-CSharp.xml.bak" -printf "%s")
          echo "oldSize=$(find "DLL_stripped/Assembly-CSharp.xml.bak" -printf "%s")" >> "$GITHUB_ENV"
          echo "${{ env.oldSize }}"
      - name: Download Assembly-CSharp.xml Artifact
        uses: actions/download-artifact@v3
        with:
          name: Assembly-CSharp.xml
          path: DLL_stripped
      - name: Compare old Assembly-CSharp.xml to new
        run: |
          ls -l DLL_stripped
          newSize=$(find "DLL_stripped/Assembly-CSharp.xml" -printf "%s")
          echo "newSize=$(find "DLL_stripped/Assembly-CSharp.xml" -printf "%s")" >> "$GITHUB_ENV"
          now=$(date +%Y.%m.%d)
          echo "now=$(date +%Y.%m.%d)" >> "$GITHUB_ENV"
          fileTime=$(find -name "DLL_stripped/Assembly-CSharp.xml" -prune -printf '%TY.%Tm.%Td\n')
          echo "fileTime=$(find -name DLL_stripped/Assembly-CSharp.xml -prune -printf '%TY.%Tm.%Td\n')" >> "$GITHUB_ENV"
          echo "${{ env.newSize }}"
          echo "${{ env.now }}"
          echo "${{ env.fileTime }}"
      - name: Dotnet Setup
        uses: actions/setup-dotnet@v3
        with:
          dotnet-version: 7.x

      - run: dotnet tool update -g docfx
      - run: docfx docfx_project/docfx.json

      - name: Setup Pages
        uses: actions/configure-pages@v3
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v1
        with:
          # Upload entire repository
          path: '.'
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
        
        if: ${{ env.newSize != env.oldSize }}
      - name: Push Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: "DLL_stripped/Assembly-CSharp.xml"
          body: "* Updated XML Documentation"
          # tag: "${{ env.now }}"
          commit: true
